version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: mini-erp-laravel:latest
    container_name: mini-erp-app
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      - APP_ENV=${APP_ENV:-production}
      - APP_DEBUG=${APP_DEBUG:-false}
      - APP_KEY=${APP_KEY}
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE:-mini_erp}
      - DB_USERNAME=${DB_USERNAME:-root}
      - DB_PASSWORD=${DB_PASSWORD:-rootpassword}
    volumes:
      # Manter storage e cache sincronizados
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
      # Para desenvolvimento, você pode descomentar a linha abaixo
      # - .:/var/www/html
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - mini-erp-network

  mysql:
    image: mysql:8.0
    container_name: mini-erp-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_DATABASE:-mini_erp}
      MYSQL_USER: ${DB_USERNAME:-laravel}
      MYSQL_PASSWORD: ${DB_PASSWORD:-laravelpassword}
    ports:
      - "${DB_PORT:-3307}:3306"  # Usar 3307 para não conflitar com Laragon
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d  # Scripts de inicialização
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - mini-erp-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: mini-erp-phpmyadmin
    restart: unless-stopped
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-rootpassword}
      UPLOAD_LIMIT: 100M
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - mini-erp-network

  # Opcional: Redis para cache e sessões
  redis:
    image: redis:7-alpine
    container_name: mini-erp-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - mini-erp-network

volumes:
  mysql_data:
    driver: local

networks:
  mini-erp-network:
    driver: bridge
